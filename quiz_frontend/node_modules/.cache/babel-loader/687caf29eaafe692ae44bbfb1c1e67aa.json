{"ast":null,"code":"var _jsxFileName = \"/var/www/html/QuizApplication/frontend/src/components/SelectField/selectField.js\",\n    _s = $RefreshSig$();\n\nimport { Container, FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SelectField = props => {\n  _s();\n\n  const {\n    label,\n    options,\n    difficultyOptions,\n    typeOptions\n  } = props;\n  const [value, setValue] = useState('');\n\n  const handleChange = e => {\n    setValue(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      width: \"100%\",\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        size: \"small\",\n        fullWidth: true,\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: value,\n          label: label,\n          onChange: handleChange,\n          children: options === null || options === void 0 ? void 0 : options.map(_ref => {\n            let {\n              id,\n              name\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: id,\n              children: name\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: value,\n          label: label,\n          onChange: handleChange,\n          children: difficultyOptions === null || difficultyOptions === void 0 ? void 0 : difficultyOptions.map(_ref2 => {\n            let {\n              id,\n              difficulty\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: id,\n              children: difficulty\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          value: value,\n          label: label,\n          onChange: handleChange,\n          children: typeOptions === null || typeOptions === void 0 ? void 0 : typeOptions.map(_ref3 => {\n            let {\n              id,\n              type\n            } = _ref3;\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: id,\n              children: type\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 13\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SelectField, \"A2PXPeq8TepW328gUMM4+o8Xryo=\");\n\n_c = SelectField;\nexport default SelectField;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectField\");","map":{"version":3,"sources":["/var/www/html/QuizApplication/frontend/src/components/SelectField/selectField.js"],"names":["Container","FormControl","InputLabel","MenuItem","Select","Box","React","useState","SelectField","props","label","options","difficultyOptions","typeOptions","value","setValue","handleChange","e","target","map","id","name","difficulty","type"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,UAAjC,EAA6CC,QAA7C,EAAuDC,MAAvD,QAAqE,eAArE;AACA,SAASC,GAAT,QAAoB,aAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAE3B,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA,iBAAjB;AAAoCC,IAAAA;AAApC,MAAmDJ,KAAzD;AAEA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,YAAY,GAAIC,CAAD,IAAO;AACxBF,IAAAA,QAAQ,CAACE,CAAC,CAACC,MAAF,CAASJ,KAAV,CAAR;AACH,GAFD;;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAC,IAApB;AAAA,2BACA,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,KAAK,EAAC,MAAlB;AAAA,6BACI,QAAC,WAAD;AAAa,QAAA,IAAI,EAAC,OAAlB;AAA0B,QAAA,SAAS,MAAnC;AAAA,gCACI,QAAC,UAAD;AAAA,oBAAaJ;AAAb;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEI,KAAf;AAAsB,UAAA,KAAK,EAAEJ,KAA7B;AAAoC,UAAA,QAAQ,EAAEM,YAA9C;AAAA,oBACCL,OADD,aACCA,OADD,uBACCA,OAAO,CAAEQ,GAAT,CAAa;AAAA,gBAAC;AAAEC,cAAAA,EAAF;AAAMC,cAAAA;AAAN,aAAD;AAAA,gCAClB,QAAC,QAAD;AAAU,cAAA,KAAK,EAAED,EAAjB;AAAA,wBACGC;AADH,eAA0BD,EAA1B;AAAA;AAAA;AAAA;AAAA,oBADkB;AAAA,WAAb;AADD;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAUI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEN,KAAf;AAAsB,UAAA,KAAK,EAAEJ,KAA7B;AAAoC,UAAA,QAAQ,EAAEM,YAA9C;AAAA,oBACCJ,iBADD,aACCA,iBADD,uBACCA,iBAAiB,CAAEO,GAAnB,CAAuB;AAAA,gBAAC;AAAEC,cAAAA,EAAF;AAAME,cAAAA;AAAN,aAAD;AAAA,gCAC5B,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEF,EAAjB;AAAA,wBACGE;AADH,eAA0BF,EAA1B;AAAA;AAAA;AAAA;AAAA,oBAD4B;AAAA,WAAvB;AADD;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAkBI,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAEN,KAAf;AAAsB,UAAA,KAAK,EAAEJ,KAA7B;AAAoC,UAAA,QAAQ,EAAEM,YAA9C;AAAA,oBACCH,WADD,aACCA,WADD,uBACCA,WAAW,CAAEM,GAAb,CAAiB;AAAA,gBAAC;AAAEC,cAAAA,EAAF;AAAMG,cAAAA;AAAN,aAAD;AAAA,gCACtB,QAAC,QAAD;AAAU,cAAA,KAAK,EAAEH,EAAjB;AAAA,wBACGG;AADH,eAA0BH,EAA1B;AAAA;AAAA;AAAA;AAAA,oBADsB;AAAA,WAAjB;AADD;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CA1CD;;GAAMZ,W;;KAAAA,W;AA4CN,eAAeA,WAAf","sourcesContent":["import { Container, FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport React, { useState } from \"react\";\n\nconst SelectField = (props) => {\n\n    const {label, options, difficultyOptions, typeOptions} = props;\n\n    const [value, setValue] = useState('');\n\n    const handleChange = (e) => {\n        setValue(e.target.value)\n    }\n\n    return(\n        <Container maxWidth=\"sm\">\n        <Box mt={3} width=\"100%\">\n            <FormControl size=\"small\" fullWidth>\n                <InputLabel>{label}</InputLabel>\n                <Select value={value} label={label} onChange={handleChange}>\n                {options?.map(({ id, name }) => (\n            <MenuItem value={id} key={id}>\n              {name}\n            </MenuItem>\n          ))}\n                </Select>\n                {/* For Difficulty ***************************/}\n                <Select value={value} label={label} onChange={handleChange}>\n                {difficultyOptions?.map(({ id, difficulty  }) => (\n            <MenuItem value={id} key={id}>\n              {difficulty}\n            </MenuItem>\n          ))}\n                </Select>\n                {/* For Type *********************************/}\n                <Select value={value} label={label} onChange={handleChange}>\n                {typeOptions?.map(({ id, type }) => (\n            <MenuItem value={id} key={id}>\n              {type}\n            </MenuItem>\n          ))}\n                </Select>\n            </FormControl>\n        </Box>\n        </Container>\n    )\n}\n\nexport default SelectField;"]},"metadata":{},"sourceType":"module"}